plugins {
    id 'ear'
    id 'groovy'
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.7'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'war'
}

group 'Test'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // The following dependencies will be the ear modules and
    // will be placed in the ear root
    // deploy project(':war')

    // The following dependencies will become ear libs and will
    // be placed in a dir configured via the libDirName property
    // earlib group: 'log4j', name: 'log4j'
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'com.codeborne:selenide:5.2.2'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2019.1'
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
ear {
    appDirName 'src/main/app'  // use application metadata found in this folder
    // put dependent libraries into APP-INF/lib inside the generated EAR
    libDirName 'APP-INF/lib'
    deploymentDescriptor {  // custom entries for application.xml:
//      fileName = "application.xml"  // same as the default value
//      version = "6"  // same as the default value
//      applicationName = "customear"
        initializeInOrder = true
//      displayName = "Custom Ear"  // defaults to project.name
        // defaults to project.description if not set
//      description = "My customized EAR for the Gradle documentation"
//      libraryDirectory = "APP-INF/lib"  // not needed, above libDirName setting does this
//      module("my.jar", "java")  // won't deploy as my.jar isn't deploy dependency
//      webModule("my.war", "/")  // won't deploy as my.war isn't deploy dependency
//      securityRole "admin"
//      securityRole "superadmin"
    }
}
patchPluginXml {
    changeNotes """
      Add change notes here.<br>
      <em>most HTML tags may be used</em>"""
}